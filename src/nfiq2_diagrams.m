clc; clear all; close all;

% files = {'alp_8_HL_pi_new_v1.txt', ...
%         'alp_8_HL_pi_new_v2.txt', ...
%         'alp_8_HL_pi_new_v3.txt', ...
%         'alp_8_HL_pi_new_v4.txt', ...
%         'alp_8_HL_pi_new_v5.txt', ...
%         'alp_8_HL_pi_new_v6.txt', ...
%         'alp_8_HL_pi.txt', ...
%         'alp_8_LH_pi_im_v1.txt', ...
%         'alp_8_LH_pi_im_v2.txt', ...
%         'alp_8_LH_pi_im_v3.txt', ...
%         'alp_8_LH_pi_im_v4.txt', ...
%         'alp_8_LH_pi_im_v5.txt', ...
%         'alp_8_LH_pi_im_v6.txt', ...
%         'alp_8_LH_pi.txt', ...
%         'alp_10_HL_pi_im_v1.txt', ...
%         'alp_10_HL_pi_im_v2.txt', ...
%         'alp_10_HL_pi_im_v3.txt', ...
%         'alp_10_HL_pi_im_v4.txt', ...
%         'alp_10_HL_pi_im_v5.txt', ...
%         'alp_10_HL_pi_im_v6.txt', ...
%         'alp_10_HL_pi.txt', ...
%         'alp_10_LH_pi_im_v1.txt', ...
%         'alp_10_LH_pi_im_v2.txt', ...
%         'alp_10_LH_pi_im_v3.txt', ...
%         'alp_10_LH_pi_im_v4.txt', ...
%         'alp_10_LH_pi_im_v5.txt', ...
%         'alp_10_LH_pi_im_v6.txt', ...
%         'alp_10_LH_pi.txt', ...
%         'alp_5_HL_pi_new_v1.txt', ...
%         'alp_5_LH_pi_im_v1.txt', ...
%         'alp_8_HL_pi_new_v1.txt', ...
%         'alp_8_LH_pi_im_v1.txt', ...
%         'alp_10_HL_pi_im_v1.txt', ...
%         'alp_10_LH_pi_im_v1.txt', ...
%         'alp_5_HL_pi.txt', ...
%         'alp_5_HL_pi_new_v2.txt', ...
%         'alp_5_LH_pi_im_v2.txt', ...
%         'alp_8_HL_pi_new_v2.txt', ...
%         'alp_8_LH_pi_im_v2.txt', ...
%         'alp_10_HL_pi_im_v2.txt', ...
%         'alp_10_LH_pi_im_v2.txt', ...
%         'alp_5_LH_pi.txt', ...
%         'alp_10_HL_pi_im_v3.txt', ...
%         'alp_10_HL_hg_v2.txt', ...
%         'alp_10_LH_pi_im_v5.txt', ...
%         'alp_10_LH_hg_v1.txt', ...
%         'org_alp_10_HL_pi_v1.txt', ...
%         'org_alp_10_LH_pi_v1.txt', ...
%         };

files = {'alp_8_HL_pi_new_v1.txt', ...
        'alp_8_HL_pi_new_v3.txt', ...
        'alp_8_HL_pi_new_v5.txt', ...
        'alp_8_HL_pi_new_v2.txt', ...
        'alp_8_HL_pi_new_v4.txt', ...
        'alp_8_HL_pi_new_v6.txt', ...
        'alp_8_HL_pi.txt', ...
        'alp_8_LH_pi_im_v1.txt', ...
        'alp_8_LH_pi_im_v3.txt', ...
        'alp_8_LH_pi_im_v5.txt', ...
        'alp_8_LH_pi_im_v2.txt', ...
        'alp_8_LH_pi_im_v4.txt', ...
        'alp_8_LH_pi_im_v6.txt', ...
        'alp_8_LH_pi.txt', ...
        'alp_10_HL_pi_im_v1.txt', ...
        'alp_10_HL_pi_im_v3.txt', ...
        'alp_10_HL_pi_im_v5.txt', ...
        'alp_10_HL_pi_im_v2.txt', ...
        'alp_10_HL_pi_im_v4.txt', ...
        'alp_10_HL_pi_im_v6.txt', ...
        'alp_10_HL_pi.txt', ...
        'alp_10_LH_pi_im_v1.txt', ...
        'alp_10_LH_pi_im_v3.txt', ...
        'alp_10_LH_pi_im_v5.txt', ...
        'alp_10_LH_pi_im_v2.txt', ...
        'alp_10_LH_pi_im_v4.txt', ...
        'alp_10_LH_pi_im_v6.txt', ...
        'alp_10_LH_pi.txt', ...
        'alp_5_HL_pi_new_v1.txt', ...
        'alp_5_LH_pi_im_v1.txt', ...
        'alp_8_HL_pi_new_v1.txt', ...
        'alp_8_LH_pi_im_v1.txt', ...
        'alp_10_HL_pi_im_v1.txt', ...
        'alp_10_LH_pi_im_v1.txt', ...
        'alp_5_HL_pi.txt', ...
        'alp_5_HL_pi_new_v2.txt', ...
        'alp_5_LH_pi_im_v2.txt', ...
        'alp_8_HL_pi_new_v2.txt', ...
        'alp_8_LH_pi_im_v2.txt', ...
        'alp_10_HL_pi_im_v2.txt', ...
        'alp_10_LH_pi_im_v2.txt', ...
        'alp_5_LH_pi.txt', ...
        'alp_10_HL_pi_im_v3.txt', ...
        'alp_10_HL_hg_v2.txt', ...
        'alp_10_LH_pi_im_v5.txt', ...
        'alp_10_LH_hg_v1.txt', ...
        'org_alp_10_HL_pi_v1.txt', ...
        'org_alp_10_LH_pi_v1.txt', ...
        };

train_file = {'train.txt', ...         
        };

colors = {[0, 0.4470, 0.7410], ... % blue
          [0.8500, 0.3250, 0.0980], ... % orange
          [0.9290, 0.6940, 0.1250], ... % yellow
          [0.4940, 0.1840, 0.5560], ... % purple
          [0.4660, 0.6740, 0.1880], ... % green
          [0.3010, 0.7450, 0.9330], ... % light blue
          [1, 0.4, 0.7]}; % pink


nfiq2_scores = {};
train_nfiq2_scores = {};

% read train nfiq2 scores
fid = fopen(['NFIQ2_Scores/' train_file{1}]);
data = textscan(fid,'%s%d%f%f%d%d','delimiter',';','HeaderLines',1);
fclose(fid);
train_nfiq2_scores{1} = data{2};

for i=1:length(files)
    fid = fopen(['NFIQ2_Scores/' files{i}]);
    data = textscan(fid,'%s%d%f%f%d%d','delimiter',';','HeaderLines',1);
    fclose(fid);
    nfiq2_scores{i} = data{2};
    avg_nfiq2_scores(i) = int32(mean(data{2}));
end


% plot_nfiq2_scores(1, 7, {'alp 8 HL1','alp 8 HL2','alp 8 HL3','alp 8 HL4','alp 8 HL5','alp 8 HL6', 'Train-Data', 'Org-Data'}, nfiq2_scores, train_nfiq2_scores, colors, 'figure1.png');
% plot_nfiq2_scores(8, 14, {'alp 8 LH1','alp 8 LH2','alp 8 LH3','alp 8 LH4','alp 8 LH5','alp 8 LH6', 'Train-Data', 'Org-Data'}, nfiq2_scores, train_nfiq2_scores, colors, 'figure2.png');
% plot_nfiq2_scores(15, 21, {'alp 10 HL1','alp 10 HL2', 'alp 10 HL3','alp 10 HL4','alp 10 HL5', 'alp 10 HL6', 'Train-Data', 'Org-Data'}, nfiq2_scores, train_nfiq2_scores, colors, 'figure3.png');
% plot_nfiq2_scores(22, 28, {'alp 10 LH1','alp 10 LH2','alp 10 LH3','alp 10 LH4','alp 10 LH5','alp 10 LH6', 'Train-Data', 'Org-Data'}, nfiq2_scores, train_nfiq2_scores, colors, 'figure4.png');
% plot_nfiq2_scores(29, 35, {'alp 5 HL1','alp 5 LH1','alp 8 HL1','alp 8 LH1','alp 10 HL1','alp 10 LH1', 'Train-Data', 'Org-Data'}, nfiq2_scores, train_nfiq2_scores, colors, 'figure5.png');
% plot_nfiq2_scores(36, 42, {'alp 5 HL2','alp 5 LH2','alp 8 HL2','alp 8 LH2','alp 10 HL2','alp 10 LH2', 'Train-Data', 'Org-Data'}, nfiq2_scores, train_nfiq2_scores, colors, 'figure6.png');
% plot_nfiq2_scores(43, 48, {'alp 10 HL - pi(14)','alp 10 HL - hg(14)','alp 10 LH - pi(21)', 'alp 10 LH - hg(21)', 'alp 10 HL Train-Data', 'alp 10 LH Train-Data', 'Org-Data'}, nfiq2_scores, train_nfiq2_scores, colors, 'figure7.png');


plot_nfiq2_scores(1, 7, {'Model-1','Model-2','Model-3','Model-4','Model-5','Model-6', 'Train-Data', 'Org-Raw-Data'}, nfiq2_scores, train_nfiq2_scores, colors, 'figure1.png');
plot_nfiq2_scores(8, 14, {'Model-7','Model-8','Model-9','Model-10','Model-11','Model-12', 'Train-Data', 'Org-Raw-Data'}, nfiq2_scores, train_nfiq2_scores, colors, 'figure2.png');
plot_nfiq2_scores(15, 21, {'Model-13','Model-14', 'Model-15','Model-16','Model-17', 'Model-18', 'Train-Data', 'Org-Raw-Data'}, nfiq2_scores, train_nfiq2_scores, colors, 'figure3.png');
plot_nfiq2_scores(22, 28, {'Model-19','Model-20','Model-21','Model-22','Model-23','Model-24', 'Train-Data', 'Org-Raw-Data'}, nfiq2_scores, train_nfiq2_scores, colors, 'figure4.png');
plot_nfiq2_scores(29, 35, {'alp 5 HL1','alp 5 LH1','alp 8 HL1','alp 8 LH1','alp 10 HL1','alp 10 LH1', 'Train-Data', 'Org-Raw-Data'}, nfiq2_scores, train_nfiq2_scores, colors, 'figure5.png');
plot_nfiq2_scores(36, 42, {'alp 5 HL2','alp 5 LH2','alp 8 HL2','alp 8 LH2','alp 10 HL2','alp 10 LH2', 'Train-Data', 'Org-Raw-Data'}, nfiq2_scores, train_nfiq2_scores, colors, 'figure6.png');
plot_nfiq2_scores(43, 48, {'Logo-pi Model-14','Logo-hg Model-14','Logo-pi Model-21', 'Logo-hg Model-21', 'Org-Train-Data Model-14', 'Org-Train-Data Model-21', 'Org-Raw-Data'}, nfiq2_scores, train_nfiq2_scores, colors, 'figure7.png');



function plot_nfiq2_scores(start_idx, end_idx, legend_text, nfiq2_scores, train_nfiq2_scores, colors, figname)
    % Create a new figure
    % Allow multiple plots to be added to the figure
    % Add a grid to the plot
    fig = figure('Visible', 'off'); hold on; grid on;

    counter = 1; % initialize counter variable

    % Loop through the specified datasets
    for i=start_idx:end_idx
        % Convert the NFIQ2 scores to double precision
        nfiq2_scores{i} = double(nfiq2_scores{i});
        % Use a kernel smoothing density estimator to smooth the histogram plot
        [f,xi] = ksdensity(nfiq2_scores{i});

        % Define a color for the plot based on which dataset is being plotted
        col = colors{counter};

        % increment counter
        counter = counter + 1;

        plot(xi,5*f,'-','LineWidth',2,'Color',col);
    end
    
    train_nfiq2_scores{1} = double(train_nfiq2_scores{1});
    [f,xi] = ksdensity(train_nfiq2_scores{1});
    plot(xi,5*f,'-','LineWidth',2,'Color',[0.6350, 0.0780, 0.1840]); % dark red

    set(gca,'Box','off','FontSize',16);
    [h_legend,~] = legend(legend_text);
%     h_legend.ItemSpacing = 0.5;
    set(h_legend,'FontSize',16,'Location','northeast');
    legend boxoff;
%     xlim([0 100]);
    ylim([0 0.8]);
    xlim([0 100]);
    xticks(0:10:100);
%     xticklabels({'0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'});
%     ylim([0 1]);
%     yticks(0:0.1:1);
%     yticklabels({'0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1.0'});
    xlabel('NFIQ2 Scores','FontSize', 16) 
    ylabel('Relative Frequency','FontSize', 16) 
    tightfig;

    % Set the figure size and save the figure
    fig.Position(3:4) = [1000 850]; % set the width and height in pixels

    % Concatenate root path and figure name
    fig_path = fullfile('/home/srinath/Documents/srinath/Master_Thesis/diagrams/experiments/matlab/nfiq2_scores/', figname);

    % Save the figure as a high-resolution PNG image
    print(fig, fig_path, '-dpng', '-r500');
end